check_for_required_parameters:
  switch:
    - condition: ${incoming.body.name == null || incoming.body.description == null || incoming.body.type == null || incoming.body.content == null}
      next: return_incorrect_request
  next: extract_request_data

extract_request_data:
  assign:
    name: ${incoming.body.name}
    description: ${incoming.body.description}
    type: ${incoming.body.type.toUpperCase()}
    content: ${incoming.body.content}
  next: service_add

service_add:
  call: http.post
  args:
    url: "[#SERVICE_RESQL]:[#SERVICE_RESQL_PORT]/add"
    body:
      name: ${name}
      description: ${description}
      ruuter_type: ${type}
  result: createdService

convert_json_content_to_yml:
  call: http.post
  args:
    url: "[#SERVICE_NODE]:[#SERVICE_NODE_PORT]/conversion/json_to_yaml_data"
    body:
      data: ${content}
  result: ymlResult

check_for_type:
  switch:
    - condition: ${type === 'GET'}
      next: add_get_dsl
  next: add_post_dsl

add_get_dsl:
  call: http.post
  args:
    url: "[#SERVICE_NODE]:[#SERVICE_NODE_PORT]/file/write"
    body:
      file_path: "/Ruuter/GET/services/draft/${name}.tmp"
      content: ${ymlResult.response.body.yaml}
  result: results
  next: check_result

add_post_dsl:
  call: http.post
  args:
    url: "[#SERVICE_NODE]:[#SERVICE_NODE_PORT]/file/write"
    body:
      file_path: "/Ruuter/POST/services/draft/${name}.tmp"
      content: ${ymlResult.response.body.yaml}
  result: results
  next: check_result

check_result:
  switch:
    - condition: ${200 <= results.response.statusCodeValue && results.response.statusCodeValue < 300}
      next: return_ok
  next: return_bad_request

return_ok:
  reloadDsl: true
  status: 200
  return: ${results.response.body.message}
  next: end

return_bad_request:
  status: 400
  return: ${results.response.body.message}
  next: end

return_incorrect_request:
  status: 400
  return: "Required parameter(s) missing"
  next: end
